[{"/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/index.js":"1","/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/App.js":"2","/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/reportWebVitals.js":"3","/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/components/Home/Home.jsx":"4"},{"size":500,"mtime":1643717866250,"results":"5","hashOfConfig":"6"},{"size":180,"mtime":1643749988935,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1643717866250,"results":"8","hashOfConfig":"6"},{"size":2050,"mtime":1643763887818,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"178ozvi",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/index.js",[],[],"/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/App.js",[],[],"/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/reportWebVitals.js",[],[],"/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/components/Home/Home.jsx",["23"],[],"import { Table, InputNumber } from 'antd';\nimport { useState, useEffect, useCallback } from 'react';\n\nexport const Home = () => {\n\tconst [dataSource, setDataSource] = useState([]);\n\n\tconst parseData = useCallback((data) => {\n\t\tconst modifiedData = data.map((ticket) => {\n\t\t\tconst ticketObject = {\n\t\t\t\tid: ticket.id,\n\t\t\t\tname: ticket.title,\n\t\t\t\ttype: ticket.type,\n\t\t\t\tdate: new Date(ticket.releaseDate).toLocaleDateString('es-ES'),\n\t\t\t\treleaseDate: ticket.releaseDate,\n\t\t\t\tprice: ticket.price,\n\t\t\t\tunits: 0,\n\t\t\t};\n\n\t\t\treturn ticketObject;\n\t\t});\n\n\t\treturn modifiedData;\n\t}, []);\n\n\tconst fetchData = useCallback(async () => {\n\t\tconst request = await fetch(\n\t\t\t'https://my-json-server.typicode.com/davidan90/demo/tickets'\n\t\t);\n\t\tconst response = await request.json();\n\t\tconst result = parseData(response);\n\t\tsetDataSource(result);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, [fetchData]);\n\n\tconst handleOnChange = (value, rowData) => {\n\t\tconst dataCopy = [...dataSource];\n\t\tconst elementIndex = dataCopy.findIndex((el) => el.id === rowData.id);\n\n\t\tif (elementIndex > -1) {\n\t\t\t// actualiza valor de units\n\t\t\tdataCopy[elementIndex].units = value;\n\t\t\t// luego de modificar los datos como los necesitamos actualizamos dataSource\n\t\t\tsetDataSource(dataCopy);\n\t\t}\n\t};\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: 'Name',\n\t\t\tdataIndex: 'name',\n\t\t\tkey: 'name',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Type',\n\t\t\tdataIndex: 'type',\n\t\t\tkey: 'type',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Release Date',\n\t\t\tdataIndex: 'date',\n\t\t\tkey: 'date',\n\t\t\tdefaultSortOrder: 'descend',\n\t\t\tsorter: (a, b) => a.releaseDate - b.releaseDate,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Unit Selector',\n\t\t\tdataIndex: 'units',\n\t\t\tkey: 'units',\n\t\t\trender: (units, rowData) => {\n\t\t\t\treturn (\n\t\t\t\t\t<InputNumber\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={20}\n\t\t\t\t\t\tdefaultValue={units}\n\t\t\t\t\t\tonChange={(value) => handleOnChange(value, rowData)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttitle: 'Price',\n\t\t\tdataIndex: 'price',\n\t\t\tkey: 'price',\n\t\t},\n\t];\n\n\tconsole.log({ dataSource });\n\n\treturn (\n\t\t<>\n\t\t\t<Table dataSource={dataSource} columns={columns} pagination={false} />\n\t\t</>\n\t);\n};\n",{"ruleId":"24","severity":1,"message":"25","line":32,"column":5,"nodeType":"26","endLine":32,"endColumn":7,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'parseData'. Either include it or remove the dependency array.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [parseData]",{"range":"31","text":"32"},[831,833],"[parseData]"]