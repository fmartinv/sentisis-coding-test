{"ast":null,"code":"var _jsxFileName = \"/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/components/Home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table, InputNumber } from 'antd';\nimport { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const [dataSource, setDataSource] = useState([]);\n  const parseData = us(data => {\n    const modifiedData = data.map(ticket => {\n      const ticketObject = {\n        id: ticket.id,\n        name: ticket.title,\n        type: ticket.type,\n        date: new Date(ticket.releaseDate).toLocaleDateString('es-ES'),\n        releaseDate: ticket.releaseDate,\n        price: ticket.price,\n        units: 0\n      };\n      return ticketObject;\n    });\n    return modifiedData;\n  });\n  const fetchData = useCallback(async () => {\n    const request = await fetch('https://my-json-server.typicode.com/davidan90/demo/tickets');\n    const response = await request.json();\n    const result = parseData(response); // [{id, name, date, units, etc}]\n\n    setDataSource(result);\n  }, []);\n  useEffect(() => {\n    fetchData(); // const result = parseData(dataSource); // [{id, name, date, units, etc}]\n    // setDataSource(result);\n  }, [fetchData]);\n\n  const handleOnChange = value => {\n    console.log('Onchange', value);\n  };\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type'\n  }, {\n    title: 'Release Date',\n    dataIndex: 'date',\n    key: 'date',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.releaseDate - b.releaseDate\n  }, {\n    title: 'Unit Selector',\n    dataIndex: 'units',\n    key: 'units',\n    render: units => {\n      return /*#__PURE__*/_jsxDEV(InputNumber, {\n        min: 0,\n        max: 20,\n        defaultValue: units,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this);\n    }\n  }, {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"u+Vzcf0UDAM7rsxTlUD6VywX5wo=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/fernandovillafane/Documents/projects/sentisis-coding-test/src/components/Home/Home.jsx"],"names":["Table","InputNumber","useState","useEffect","useCallback","Home","dataSource","setDataSource","parseData","us","data","modifiedData","map","ticket","ticketObject","id","name","title","type","date","Date","releaseDate","toLocaleDateString","price","units","fetchData","request","fetch","response","json","result","handleOnChange","value","console","log","columns","dataIndex","key","defaultSortOrder","sorter","a","b","render"],"mappings":"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","sourcesContent":["import { Table, InputNumber } from 'antd';\nimport { useState, useEffect, useCallback } from 'react';\n\nexport const Home = () => {\n\tconst [dataSource, setDataSource] = useState([]);\n\n\tconst parseData = us((data) => {\n\t\tconst modifiedData = data.map((ticket) => {\n\t\t\tconst ticketObject = {\n\t\t\t\tid: ticket.id,\n\t\t\t\tname: ticket.title,\n\t\t\t\ttype: ticket.type,\n\t\t\t\tdate: new Date(ticket.releaseDate).toLocaleDateString('es-ES'),\n\t\t\t\treleaseDate: ticket.releaseDate,\n\t\t\t\tprice: ticket.price,\n\t\t\t\tunits: 0,\n\t\t\t};\n\n\t\t\treturn ticketObject;\n\t\t});\n\n\t\treturn modifiedData;\n\t});\n\tconst fetchData = useCallback(async () => {\n\t\tconst request = await fetch(\n\t\t\t'https://my-json-server.typicode.com/davidan90/demo/tickets'\n\t\t);\n\t\tconst response = await request.json();\n\t\tconst result = parseData(response); // [{id, name, date, units, etc}]\n\t\tsetDataSource(result);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t\t// const result = parseData(dataSource); // [{id, name, date, units, etc}]\n\t\t// setDataSource(result);\n\t}, [fetchData]);\n\n\tconst handleOnChange = (value) => {\n\t\tconsole.log('Onchange', value);\n\t};\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: 'Name',\n\t\t\tdataIndex: 'name',\n\t\t\tkey: 'name',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Type',\n\t\t\tdataIndex: 'type',\n\t\t\tkey: 'type',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Release Date',\n\t\t\tdataIndex: 'date',\n\t\t\tkey: 'date',\n\t\t\tdefaultSortOrder: 'descend',\n\t\t\tsorter: (a, b) => a.releaseDate - b.releaseDate,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Unit Selector',\n\t\t\tdataIndex: 'units',\n\t\t\tkey: 'units',\n\t\t\trender: (units) => {\n\t\t\t\treturn (\n\t\t\t\t\t<InputNumber\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={20}\n\t\t\t\t\t\tdefaultValue={units}\n\t\t\t\t\t\tonChange={handleOnChange}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttitle: 'Price',\n\t\t\tdataIndex: 'price',\n\t\t\tkey: 'price',\n\t\t},\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<Table dataSource={dataSource} columns={columns} pagination={false} />\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}